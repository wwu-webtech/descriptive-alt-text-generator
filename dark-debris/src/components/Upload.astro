---
interface Props {
  key: string;
  endpoint: string;
}

const { key, endpoint } = Astro.props;
---

<astro-upload data-endpoint={endpoint} data-key={key}>
  <div class="wwu-card horizontal dark-blue-bg">
    <div class="body">
  <form style={{ marginTop: "20px", marginBottom: "20px" }}>
    <label for="file"><h3>File</h3></label>
    <input
      type="file"
      id="file-input"
      accept=".png,.jpg,.jpeg"
      style={{ width: "100%" }}
    />
    <label for="prompt"><h3>Prompt <i>[Optional]</i></h3></label>
    <textarea
      id="prompt"
      placeholder="Enter a prompt"
      rows="5"
      wrap="hard"
      style={{ width: "100%" }}
    >
    </textarea>
  </form>
  <button id="evaluate-image" style={{ marginBottom: '10px'}}>Evaluate Image</button>
    </div>
    <canvas id="canvas" style={{ margin: "10px", objectFit: "contain", width: "95%"}}></canvas>
    </div>
</astro-upload>

<script>
  import { handleAzureCall, handleGeminiCall } from "../js/API"
  class AstroUpload extends HTMLElement {
    constructor() {
      super();
      const canvas = document.getElementById("canvas");
      const context = canvas.getContext("2d");
      canvas.width = 0;
      canvas.height = 0;
      const fileInput = document.getElementById("file-input");


      const button = document.getElementById("evaluate-image");
      button.addEventListener("click", () => {
        handleAzureCall(this.dataset.key, this.dataset.endpoint);
        console.log("Button clicked!");
      });

      fileInput.addEventListener("change", () => {
        const selectedFile = fileInput.files[0];

        if (selectedFile) {
          const reader = new FileReader();

          reader.onload = function (e) {
            const img = new Image();
            img.onload = function () {
              // Adjust canvas size to the new dimensions
              canvas.width = img.width;
              canvas.height = img.height;

              // Draw the image on the canvas
              context.drawImage(img, 0, 0, img.width, img.height);
            };
            img.src = e.target.result;
          };
          reader.readAsDataURL(selectedFile);
        }
      });
    }
  }

  customElements.define("astro-upload", AstroUpload);
</script>
