---

import RefineResults from "./RefineResults.astro";
import Upload from "./FileUpload.astro";
import UrlUpload from "./UrlUpload.jsx";
---
<h2 id="#input-form">Input An Image</h2>
<wwu-switcher label="Upload Type">
	<dialog id="evaluate-error">
		<p id="evaluate-error-message"></p>
		<form method="dialog">
			<button>OK</button>
		</form>
	</dialog>
	<dialog id="evaluate-loading">
		<img
			id="loading-gif"
			src="/loading.gif"
			alt="Loading Your Image, Please Wait. "
		/>
	</dialog>
	<wwu-switcher-item label="File Upload">
		<Upload />
	</wwu-switcher-item>
	<wwu-switcher-item label="Link to Image *WIP*">
		<UrlUpload client:load />
	</wwu-switcher-item>
</wwu-switcher>

<h2 id="results-section">Results</h2>

<label for="gemini-area"><h3>Gemini</h3></label>
<textarea
	id="gemini-area"
	placeholder="Results from Gemini"
	wrap="hard"
	rows="5"></textarea>
<RefineResults
	model_id="refine-gemini"
	button_id="refine-gemini-button"
/>

<label for="azure-area"><h3>Azure</h3></label>
<textarea
	id="azure-area"
	placeholder="Results from Azure"
	wrap="hard"
	rows="5"></textarea>

<label for="chatgpt-area"><h3>ChatGPT</h3></label>
<textarea
	id="chatgpt-area"
	placeholder="Results from ChatGPT"
	wrap="hard"
	rows="5"></textarea>
<RefineResults
	model_id="refine-chatgpt"
	button_id="refine-chatgpt-button"
/>

<!-- checkbox here to mark image as decorative instead of using one of the AI created suggestions. To set the image as decorative. You set alt="" on the <img> element -->
<!-- If the user selects the "mark as decorative" checkbox then we verify again with the user, using a modal dialog, "Are you certain you want to mark this image as decorative?" -->
<!-- id="AltTextOnMyImage" It would be nice to have a text field where folks could enter their alt text into, have it spell checked, and then saved into a database that correlates their image with their written alt text. -->
<!-- It might be cool to add a "Copy to Clipboard" button where the code required to implement the adjusted alt text for id="AltTextOnMyImage" would be provided -->
</div>
